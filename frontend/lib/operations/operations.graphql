fragment UserInfo on User {
  email
  name
}

fragment PageInfo on Page {
  id
  blocks
  creator {
    ...UserInfo
  }
  createdAt
  updatedAt
}

query getPages {
  queryPage(filter: { has: creator } order:{ desc: createdAt }) {
    ...PageInfo
  }
}

query getPage($pageID: ID!) {
  getPage(id: $pageID) {
    ...PageInfo
  }
}

mutation addPage($page: AddPageInput!) {
  addPage(input: [$page]) {
    page {
      ...PageInfo
    }
  }
}

mutation updatePage($updatePageInput: UpdatePageInput!) {
  updatePage(input: $updatePageInput) {
    page {
      ...PageInfo
    }
  }
}

mutation deletePage($pageID: ID!) {
  deletePage(filter: {id: [$pageID]}) {
    page {
      id
    }
  }
}

mutation updateUser($email: String, $name: String!, $timestamp: DateTime!) {
  updateUser(input: {filter:{email: {eq: $email}}, set: {name: $name}}) {
    user {
      email
      name
      updatedAt
    }
  }
}